#!/bin/bash

# Path to the plugins directory and output file
plugins_dir="./plugins"
output_file="./docs/Plugins.md"

# Start the markdown file with the YAML front matter
echo "---" > "$output_file"
echo "layout: default" >> "$output_file"
echo "title: Plugins" >> "$output_file"
echo "nav_order: 5" >> "$output_file"
echo "---" >> "$output_file"
echo "" >> "$output_file"

# Function to parse individual plugin files
function parse_plugin {
    local id=$1
    local file_path="$plugins_dir/$id.yaml"
    if [[ -f "$file_path" ]]; then
        echo "## Plugin ID: $id" >> "$output_file"
        
        local description=$(yq -r '.description' "$file_path")
        echo "### Description" >> "$output_file"
        echo "$description" >> "$output_file"
        echo "" >> "$output_file"
        
        local command=$(yq -r '.command' "$file_path")
        local args=$(yq -r '.args | join(" ")' "$file_path")
        
        echo "### Command" >> "$output_file"
        echo "\`\`\`" >> "$output_file"
        echo "$command $args" >> "$output_file"
        echo "\`\`\`" >> "$output_file"
        echo "" >> "$output_file"
    else
        echo "Plugin file $file_path not found."
    fi
}

# Read the config.yaml file
echo "Parsing config.yaml..."
yq -r '.port_actions | keys[]' "$plugins_dir/config.yaml" | while read -r port; do
    # Properly quote the port key to avoid jq syntax errors
    yq -r ".port_actions[\"$port\"][]" "$plugins_dir/config.yaml" | while read -r plugin_id; do
        parse_plugin "$plugin_id"
    done
done


echo "Documentation updated in $output_file"
